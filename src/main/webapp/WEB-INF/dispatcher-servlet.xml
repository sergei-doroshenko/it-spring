<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<import resource="security.xml"/>
	
	<context:component-scan base-package="org.training.issuetracker.controllers" />
	<context:component-scan base-package="org.training.issuetracker.data" />
	<context:component-scan base-package="org.training.issuetracker.validation" />
	<context:component-scan base-package="org.training.issuetracker.secutity" />
	<context:component-scan base-package="org.training.issuetracker.utils" />
	
	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:annotation-driven conversion-service="conversionService"/>
	<mvc:default-servlet-handler />
	
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:property-placeholder location="classpath:db/h2-file.properties"/>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">		        
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	 
	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
		<jdbc:script location="classpath:db/schema.sql"/>
    	<jdbc:script location="classpath:db/test-data.sql"/>
	</jdbc:initialize-database>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="org.training.issuetracker.domain"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
    </bean>
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    
	<!-- bean id="authenticationDao" class="org.acegisecurity.userdetails.jdbc.JdbcDaoImpl">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="usersByUsernameQuery">
	        <value>
	            SELECT email as username, password, enabled FROM USERS WHERE email=?
	        </value>
	    </property>
	    select username,password,true from spitter where username=?
			  	select username,'ROLE_SPITTER'from spitter where username=?
	    <property name="authoritiesByUsernameQuery">
	        <value>
	            SELECT USERS.EMAIL AS username, 
	            ROLES.NAME AS authority 
	            FROM USERS 
	            LEFT JOIN ROLES ON USERS.ROLE_ID = ROLES.ID 
	            WHERE USERS.EMAIL = ?
	        </value>
	    </property>
	</bean>
    
    <bean id="authenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
    	<property name="userDetailsService" ref="authenticationDao"/>
	</bean>
    
    <bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
	    <property name="providers">
	        <list>
	            <ref bean="authenticationProvider"/>
	        </list>
	    </property>
	</bean-->
    
    <bean id="messageSource" 
    	class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basename" value="classpath:i18n/messages"/>
    	<property name="defaultEncoding" value="UTF-8" />
    </bean>
    
	<mvc:interceptors>
    	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        	<property name="paramName" value="lang" />
    	</bean>
  	</mvc:interceptors>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    	<property name="defaultLocale" value="ru"/>
	</bean>
	
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
	    <property name="converters">
	        <list>
	            <bean class="org.training.issuetracker.converters.RoleConverter"/>
	            <bean class="org.training.issuetracker.converters.BuildConverter"/>
	            <bean class="org.training.issuetracker.converters.PriorityConverter"/>
	            <bean class="org.training.issuetracker.converters.ProjectConverter"/>
	            <bean class="org.training.issuetracker.converters.ResolutionConverter"/>
	            <bean class="org.training.issuetracker.converters.StatusConverter"/>
	            <bean class="org.training.issuetracker.converters.TypeConverter"/>
	            <bean class="org.training.issuetracker.converters.UserConverter"/>
	            <bean class="org.training.issuetracker.converters.AttachmentConverter"/>
	        </list>
	    </property>
	</bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    
    <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>	       
    <!-- bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/-->
    <!-- bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/-->
    
	<bean id="issueDAO" class="org.training.issuetracker.data.hiber.IssueImplHiber" />	
  	<bean id="userDAO" class="org.training.issuetracker.data.hiber.UserImplHiber"/>
	<bean id="propDAO" class="org.training.issuetracker.data.hiber.PropImplHiber"/>
	<bean id="projectDAO" class="org.training.issuetracker.data.hiber.ProjectImplHiber"/>
	<bean id="buildDAO" class="org.training.issuetracker.data.hiber.BuildImplHiber"/>
	<bean id="commentDAO" class="org.training.issuetracker.data.hiber.CommentImplHiber"/>
	<bean id="attachmentDAO" class="org.training.issuetracker.data.hiber.AttachmentImplHiber"/>
		
</beans>
