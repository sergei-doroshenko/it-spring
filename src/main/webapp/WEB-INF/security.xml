<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"           
      xmlns:beans="http://www.springframework.org/schema/beans" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xsi:schemaLocation="http://www.springframework.org/schema/beans  
                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                 http://www.springframework.org/schema/security  
                 http://www.springframework.org/schema/security/spring-security-3.1.xsd"> 
 
 	<!-- global-method-security pre-post-annotations="enabled" secured-annotations="enabled" proxy-target-class="true"/-->
 	<global-method-security pre-post-annotations="enabled"/>
 
	<!-- intercept-url pattern="\A/*/edit\?oper=del*" access="hasRole('ADMINISTRATOR')"/--> 

 	<http access-denied-page="/error" use-expressions="true"> 
		<intercept-url pattern="/index*" access="hasAnyRole('USER,GUEST,ADMINISTRATOR')"/>
		<intercept-url pattern="/views/users/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/views/properties/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/user/del/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/user/**" access="hasAnyRole('USER,GUEST,ADMINISTRATOR')"/>
		<intercept-url pattern="/issue/**" access="hasRole('ADMINISTRATOR')" method="DELETE"/>
		<intercept-url pattern="/issue/list/**" access="hasAnyRole('USER,GUEST,ADMINISTRATOR')"/>
		<intercept-url pattern="/issue/view/**" access="hasAnyRole('USER,GUEST,ADMINISTRATOR')"/>
		<intercept-url pattern="/issue/**" access="hasAnyRole('USER,ADMINISTRATOR')"/>
		<intercept-url pattern="/build/project/*" access="hasAnyRole('USER,ADMINISTRATOR')"/>
		<intercept-url pattern="/build/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/project/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/prop/options/**" access="hasAnyRole('USER,GUEST,ADMINISTRATOR')"/>
		<intercept-url pattern="/prop/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/attachment/del/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/attachment/**" access="hasAnyRole('USER,ADMINISTRATOR')"/>
		<intercept-url pattern="/comment/del/**" access="hasRole('ADMINISTRATOR')"/>
		<intercept-url pattern="/comment/**" access="hasAnyRole('USER,ADMINISTRATOR')"/>
	   <form-login login-page="/index.jsp" default-target-url="/index.jsp" 
	   		authentication-success-handler-ref="myAuthenticationSuccessHandler"
	   		authentication-failure-url="/index.jsp"  
	   		authentication-failure-handler-ref="myAuthenticationFailureHandler"/> 
	   <logout logout-url="/logout" logout-success-url="/index.jsp"/> 
	   <anonymous username="guest" granted-authority="GUEST"/>
	   <session-management>
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
    	</session-management> 
	   <remember-me/> 
	</http> 
  	
  	<beans:bean id="myAuthenticationSuccessHandler" 
  		class="org.training.issuetracker.security.MyAuthenticationSuccessHandler"/>
  		
  	<beans:bean id="myAuthenticationFailureHandler" 
  		class="org.training.issuetracker.security.MyAuthenticationFailureHandler">
  	</beans:bean>
  	
	<!-- authentication-manager> 
	   <authentication-provider> 
	      <user-service> 
	         <user name="admin" password="pass" authorities="ADMINISTRATOR,USER"/> 
	         <user name="user1" password="1111" authorities="USER"/> 
	         <user name="user2" password="2222" disabled="true" authorities="USER"/>    
	      </user-service>
	   </authentication-provider> 
	</authentication-manager-->
	
	<authentication-manager erase-credentials="false">
		<authentication-provider>
	 	   <jdbc-user-service data-source-ref="dataSource" 
	     	   users-by-username-query="SELECT email as username, password, enabled FROM USERS WHERE email=?"
	     	   authorities-by-username-query="SELECT USERS.EMAIL AS username, ROLES.NAME AS authority FROM USERS LEFT JOIN ROLES ON USERS.ROLE_ID = ROLES.ID WHERE USERS.EMAIL = ?"
	     	   />
	    	<!-- 
	    	<password-encoder hash="sha"/>
	    	<password-encoder hash="sha-256">
            	<salt-source user-property="username"/>
        	</password-encoder>
        	-->
        	<password-encoder ref="encoder"/>
        	
	    </authentication-provider> 
	</authentication-manager>
	
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    	<!-- beans:constructor-arg value="10"/ -->
	</beans:bean>
	
</beans:beans>
